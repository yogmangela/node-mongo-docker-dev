apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.22.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: nodejs
  name: nodejs
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodejs
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.22.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/app-network: "true"
        io.kompose.service: nodejs
    spec:
      containers:
        - args:
            - ./wait-for.sh
            - db:27017
            - --
            - /home/node/app/node_modules/.bin/nodemon
            - app.js
          env:
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  key: MONGO_DB
                  name: env
            - name: MONGO_HOSTNAME
              value: db
            - name: MONGO_PASSWORD
              valueFrom:
                  secretKeyRef:
                    name: mongo-secret
                    key:  MONGO_PASSWORD
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  key: MONGO_PORT
                  name: env
            - name: MONGO_USERNAME
              valueFrom:
                  secretKeyRef:
                    name: mongo-secret
                    key: MONGO_USERNAME
          image: yogeshmangela/node-kubernetes
          name: nodejs
          ports:
            - containerPort: 8080
          resources: {}
      initContainers:
          - name: init-db
            image: busybox
            command:  ['sh', '-c', 'until nc -z db:27017; do echo waiting for db; sleep 2; done;']
      restartPolicy: Always
status: {}
